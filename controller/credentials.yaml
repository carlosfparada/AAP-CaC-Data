---
controller_credentials:
  - name: "Demo Credential"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      username: admin
  - name: "AWS"
    description: ""
    credential_type: "Amazon Web Services"
    organization: "Default"
    inputs:
      password: "{{ aws_secret_key }}"
      username: "{{ aws_access_key }}"
  - name: "Aruba"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      username: "{{ aruba_username }}"
      password: "{{ aruba_password }}"
  - name: "CentOS"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_password: "{{ eveng_centos_become_password }}"
      become_username: ''
      password: "{{ eveng_centos_password }}"
      username: "{{ eveng_centos_username }}"
  - name: "EVE-NG Arista, Cisco, Palo, SRX, Checkpoint"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_password: ''
      become_username: ''
      password: "{{ eveng_all_password }}"
      username: "{{ eveng_all_username }}"
  - name: "EVE-NG Fortinet"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_password: ''
      become_username: ''
      password: "{{ eveng_fortinet_password }}"
      username: "{{ eveng_fortinet_username }}"
  - name: "Private Automation Hub"
    description: ""
    credential_type: "Ansible Galaxy/Automation Hub API Token"
    organization: "Default"
    inputs:
      auth_url: ''
      url: https://172.16.1.47/api/galaxy/content/rh-certified/
  - name: "Vault quay.io"
    description: ""
    credential_type: "Vault"
    organization: "Default"
    inputs:
      vault_id: ''
      vault_password: "{{ quayio_vault_password }}"
  - name: "PoC: Demo Cisco"   # dupplicated, same as EVE-NG Arista, Cisco, Palo, SRX, Checkpoint
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_password: ''
      become_username: ''
      password: "{{ eveng_all_password }}"
      username: "{{ eveng_all_username }}"
  - name: "PoC: Demo Juniper"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      password: "{{ eveng_juniper_password }}"
      username: "{{ eveng_juniper_username }}"
  - name: "Azure"
    description: ""
    credential_type: "Microsoft Azure Resource Manager"
    organization: "Default"
    inputs:
      client: "{{ azure_client_id }}"
      cloud_environment: ''
      secret: "{{ azure_secret }}"
      subscription: "{{ azure_subscription_id }}"
      tenant: "{{ azure_tenant }}"
      username: ''
  - name: "Orange-Juniper"  # repeated
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      password: "{{ eveng_juniper_password }}"
      username: "{{ eveng_juniper_username }}"
  - name: "Active-Directory"  # to delete
    description: ""
    credential_type: "Active-Directory"
    organization: "Default"
    inputs:
      MICROSOFT_AD_LDAP_PASSWORD: ''
      MICROSOFT_AD_LDAP_SERVER: 20.234.51.182
      MICROSOFT_AD_LDAP_USERNAME: cparada
  - name: "Ansible Galaxy"
    description: ""
    credential_type: "Ansible Galaxy/Automation Hub API Token"
    organization: "Default"
    inputs:
      url: https://galaxy.ansible.com/
  - name: "Default Execution Environment Registry Credential"
    description: ""
    credential_type: "Container Registry"
    organization: "Default"
    inputs:
      host: "{{ registry_redhat_host }}"
      password: "{{ registry_redhat_password }}"
      username: "{{ registry_redhat_username }}"
      verify_ssl: true
  - name: "Automation Hub Container Registry"
    description: ""
    credential_type: "Container Registry"
    organization: "Default"
    inputs:
      host: "{{ registry_ahub_host }}"
      password: "{{ registry_ahub_password }}"
      username: "{{ registry_ahub_username }}"
      verify_ssl: false
  - name: "quay.io"
    description: ""
    credential_type: "Container Registry"
    organization: "Default"
    inputs:
      host: "{{ registry_quayio_host }}"
      password: "{{ registry_quayio_password }}"
      username: "{{ registry_quayio_username }}"
      verify_ssl: true
  - name: "Controller SSH"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      password: "{{ controller_ssh_password }}"
      username: "{{ controller_ssh_username }}"
  - name: "AWS RHEL Key Pair"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      ssh_key_data: "{{ aws_rhel_key_pair_key_data }}"
      username: "{{ aws_rhel_key_pair_username }}"
  - name: "RH Subscription Vault"  # same as other vaults?
    description: ""
    credential_type: "Vault"
    organization: "Default"
    inputs:
      vault_id: ''
      vault_password: "{{ rhel_subscription_vault }}"
  - name: "Controller SSH Vault"
    description: ""
    credential_type: "Vault"
    organization: "Default"
    inputs:
      vault_id: ''
      vault_password: "{{ controller_ssh_vault }}"
  - name: "AWS Fortinet"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_password: ''
      become_username: ''
      password: "{{ aws_fortinet_password }}"
      username: "{{ aws_fortinet_username }}"
  - name: "Azure RHEL"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: ''
      become_username: ''
      password: "{{ azure_rhel_username }}"
      username: "{{ azure_rhel_password }}"
  - name: "Databases"
    description: ""
    credential_type: "Machine"
    organization: "Default"
    inputs:
      become_method: sudo
      become_password: "{{ databases_rhel_become_password }}"
      become_username: "{{ databases_rhel_become_username }}"
      password: "{{ databases_rhel_password }}"
      username: "{{ databases_rhel_username }}"
  - name: "VMWare"
    description: ""
    credential_type: "VMware vCenter"
    organization: "Default"
    inputs:
      host: "{{ vmware_host }}"
      password: "{{ vmware_password }}"
      username: "{{ vmware_username }}"
  - name: "Controller"
    description: ""
    credential_type: "Controller"
    organization: "Default"
    inputs:
      password: "{{ controller_password }}"
      username: "{{ controller_username }}"
